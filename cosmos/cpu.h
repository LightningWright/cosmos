#include <iostream>
#include <iomanip>
#include <stdint.h> 
#include <string.h>

#ifndef CPU_H
#define CPU_H

#define WIDTH 64
#define HEIGHT 32
#define sizeofRAM 4096

using namespace std;

class RCA1802
{
public:

	uint32_t screen[WIDTH * HEIGHT]; //SDL Texture-Compatible Pixel Array
	uint8_t keys[16];

	void fetch();
	void execute();
	bool loadBinary(const char* path); //Load into RX Zone
	void resetState();

	bool drawFlag = false;
	uint8_t dT;
	uint8_t sT;

	bool debug;

	RCA1802();
	~RCA1802();

private:

	uint16_t pc;
	uint16_t opcode;
	uint16_t I;
	uint16_t stack[16];
	uint16_t sp;

	uint8_t ram[sizeofRAM];
	uint8_t V[16];

	uint8_t fonts[80] = {
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};
};
#endif // CPU_H